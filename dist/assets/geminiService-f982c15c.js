import{B as s}from"./constants-81f60586.js";import{a as o}from"./authService-2d4415af.js";const e=async(n,a,r="POST")=>{const t={method:r,body:JSON.stringify(a)};return o(`/gemini${n}`,t)},g=async n=>e("/get-support-response",{prompt:n}),p=async(n,a)=>e("/refine-and-generate",{projectId:n,prompt:a}),y=async(n,a)=>e("/get-design-clarifications",{projectId:n,prompt:a}),l=async n=>{const a=await fetch(`${s}/gemini/public/generate-genesis-plan`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({prompt:n})});if(!a.ok){const r=await a.json();throw new Error(r.message||"Failed to generate plan")}return a.json()},m=async(n,a,r)=>e("/generate-plan-from-image",{projectId:n,image:a,mimeType:r}),A=async(n,a)=>e("/research-with-google",{projectId:n,prompt:a}),h=async(n,a)=>e("/generate-multi-concept",{projectId:n,prompt:a}),d=async(n,a)=>{const r=await e("/analyze-flow",{projectId:n,projectData:a});return Array.isArray(r)?r:[]},f=async(n,a)=>e("/estimate-structure",{projectId:n,projectData:a}),S=async(n,a)=>e("/analyze-sustainability",{projectId:n,projectData:a}),w=async(n,a,r,t)=>e("/analyze-compliance",{projectId:n,projectData:t,standard:r,roomId:a}),z=async(n,a)=>e("/analyze-material",{projectId:n,prompt:a}),E=async(n,a)=>e("/analyze-vastu-grid",{projectId:n,projectData:a}),v=async(n,a)=>e("/generate-plumbing-layout",{projectId:n,projectData:a}),b=async(n,a)=>e("/generate-electrical-layout",{projectId:n,projectData:a}),P=async(n,a)=>e("/generate-hvac-layout",{projectId:n,projectData:a}),C=async(n,a)=>e("/analyze-site",{projectId:n,projectData:a}),F=async(n,a,r,t,i)=>e("/generate-render",{projectId:n,projectData:a,roomId:r,stylePrompt:t,config:i}),j=async(n,a)=>e("/generate-gfc-drawings",{projectId:n,projectData:a}),D=async(n,a,r,t)=>e("/resolve-design-comment",{projectId:n,commentText:a,projectData:r,commentPosition:t}),N=async(n,a)=>e("/generate-cinematic-tour",{projectId:n,projectData:a}),O=async(n,a,r,t)=>e("/run-oracle-analysis",{projectId:n,projectData:a,location:r,question:t}),k=async(n,a)=>e("/generate-fabrication-files",{projectId:n,selectedObject:a}),I=async(n,a)=>e("/run-indra-net-engine",{projectId:n,projectData:a}),x=async(n,a)=>e("/run-varuna-engine",{projectId:n,prompt:a}),G=async(n,a)=>e("/run-loka-simulator",{projectId:n,location:a}),L=async(n,a)=>e("/run-navagraha-engine",{projectId:n,projectData:a}),T=async(n,a)=>e("/run-akasha-engine",{projectId:n,query:a}),J=async(n,a)=>e("/run-samsara-engine",{projectId:n,projectData:a}),R=async(n,a)=>e("/run-shilpa-sutra",{projectId:n,projectData:a}),B=async(n,a)=>e("/run-singularity-engine",{projectId:n,projectData:a}),M=async(n,a)=>e("/run-prithvi-astra",{projectId:n,projectData:a}),_=async(n,a,r)=>e("/run-agni-astra",{projectId:n,projectData:a,foundationData:r}),$=async(n,a)=>e("/run-nexus-advisor",{projectId:n,projectData:a}),H=async(n,a,r)=>e("/run-atman-signature",{projectId:n,styleSignature:a,prompt:r}),K=async(n,a)=>e("/run-param-astra",{projectId:n,objectives:a}),V=async(n,a)=>e("/run-samudra-manthan",{projectId:n,projectData:a}),W=async(n,a,r)=>e("/propose-juggernaut-fix",{projectId:n,discrepancy:a,projectData:r}),q=async(n,a,r)=>e("/generate-image",{projectId:n,prompt:a,config:r}),Q=async(n,a)=>{const r=await fetch(`${s}/gemini/generate-showcase-image`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({promptIndex:n,config:a})});if(!r.ok){const t=await r.json();throw new Error(t.message||"Failed to generate showcase image")}return r.json()},U=async(n,a,r)=>e("/analyze-style-from-image",{projectId:n,image:a,mimeType:r}),X=async(n,a,r)=>e("/empty-room-from-image",{projectId:n,image:a,mimeType:r}),Y=async(n,a,r,t)=>e("/stage-room-from-image",{projectId:n,image:a,mimeType:r,prompt:t});export{T as A,J as B,R as C,K as D,V as E,B as F,M as G,_ as H,v as I,b as J,P as K,d as L,N as M,C as N,m as O,y as P,p as Q,l as a,Q as b,A as c,S as d,w as e,z as f,g,f as h,h as i,U as j,X as k,O as l,D as m,F as n,j as o,W as p,k as q,H as r,Y as s,I as t,q as u,G as v,x as w,E as x,$ as y,L as z};
